---
version: '3'

# This Taskfile represents the primary control surface for developers interacting with
# this component.
#
# Primary "configure/build/deploy/test" tasks must be provided directly in this top level
# taskfile
#
# Infrequently used or pure sub-tasks should be in subservient taskfiles and included
# here.
#
# All tasks that are expected to be run directly by developers must have a meaningful
# 'desc' with all optional variables defined, in this file or in included files.
#
# All tasks that are internal sub-tasks only should have a meaningful 'summary'.
#
includes:
  apis:
    taskfile: ./taskfiles/Taskfile_apis.yml
    # dev-notes/build-warts.md#always-set-dir-relative-to-current-task-file
    dir: ./taskfiles

tasks:

  default:
    desc: Default task lists all available tasks to run.
    cmds:
      - which task
      - |
        task --list --sort=none

  environment:
    desc: Show environment and location of tools executables.
    cmds:
      - env | sort
      - which go

  ### -------------------------
  # Primary workflow tasks 
  ### -------------------------
  all:
    desc: |
      do everything necessary after clone (or rebase) (faster as it RUNS ON NATIVE HOST)

      Note: This requires go and protoc installed on your host. If you are not
      comfortable doing this then use dockerall.

      ** The CI (ci.yml) uses this task and provides a clear illustration of the
      pre-requisites. It does not use docker **

    cmds:
      - task: clean
      - task: bootstrap
      - task: generate
      - task: apis:test
      - task: apis:export

  # 0. clean out generated and imported files
  clean:
    - rm -rf proto-include
    - rm -rf exported
    - task: apis:clean:generated

  # 1. bootstrap (only needed post clone or rebase)
  bootstrap:
    - task: apis:bootstrap

  # 2. generate
  generate:
    desc: generates all the artifacts we need pre-build
    cmds:
      - task: apis:generate
